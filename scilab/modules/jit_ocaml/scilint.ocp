(*
CLASSIC_CPPFLAGS= \
	-I$(srcdir)/includes \
        -I$(top_srcdir)/libs/MALLOC/includes \
	-I$(top_srcdir)/modules/elementary_functions/includes \
	-I$(top_srcdir)/modules/localization/includes \
	-I$(top_srcdir)/modules/operations/includes \
	-I$(top_srcdir)/modules/symbol/includes \
	-I$(top_srcdir)/modules/ast/includes \
	-I$(top_srcdir)/modules/types/includes \
	-I$(top_srcdir)/modules/parse/includes \
	-I$(top_srcdir)/modules/system_env/includes \
	-I$(top_srcdir)/modules/functions_manager/includes \
	-I$(top_srcdir)/modules/string/includes \
	-I$(top_srcdir)/modules/threads/includes \
        -I$(top_srcdir)/modules/api_scilab/includes \
        -I$(top_srcdir)/modules/console/includes \
        -I$(top_srcdir)/modules/output_stream/includes \
        -I$(top_srcdir)/libs/dynamiclibrary/includes \
	-I src/cpp \
	$(EIGEN_CPPFLAGS) \
	$(AM_CPPFLAGS)
*)


(*
begin library "scicaml_cpp"

  files = [
			"src/cpp/scicaml_ast2string.cpp"
			"src/cpp/scicaml_string2ast.cpp"
			"src/cpp/scicaml_stubs.cpp"
  ]
end

begin library "ocpsci_cpp"
   files = [
    "src/cpp/scicaml_stubs.cpp"
    "src/cpp/ocpsci_gw.cpp"
    "src/cpp/ocpsci_stubs.cpp"
  ]
end
*)

(*
	$(OCAMLOPT) -o ocamlcode.o -output-obj unix.cmxa $(OCAML_JIT_CMXS)

begin c_object "ocamlcode"
  requires = [ "unix" "jit_common" "jit_interp" ]
end
*)

begin library "jit_common"
  dirname += [ "src" "common" ]
  files = [
	"scilabSymbol.ml"
	"scilabAst.ml"
	"scilabString2Ast.ml"
	"scilabAstPrinter.ml"
	"scilabPrettyPrinter.ml"
  ]
end

begin library "jit_interp"
  dirname += [ "src" "interp" ]
  requires = [ "jit_common" ]
  files = [
        "scilabMisc.ml"
	"scilabValue.ml"
	"scilabContext.ml"
	"scilabTypes.ml"
	"scilabAst2String.ml"
	"scilabInternalType.ml"
	"scilabInterp.ml"
	"scilabCallbacks.ml"
               ]
end

begin library "jit_parser"
  dirname += [ "src" "parser" ]
  requires = [ "jit_common" ]
  files = [
	"scilabPreParser.ml"
	"scilabParser.mly"
	"uutf.ml"
	"scilabLexer.mll"
  ]
end

begin library "jit_scilint"
  dirname += [ "src" "scilint" ]
  requires = [ "jit_common" ]
  files = [
	"scilabUtils.ml"
	"scilabDeffRefactoring.ml"
	"scilabTyper.ml"
	"scilabAstStats.ml"
  ]
end

begin program "scilint"
  dirname += [ "src" "scilint" ]
  requires = [ "jit_scilint" "jit_parser" ]
  files = [
	"scilintMain.ml"
  ]
end
